datasource db {
    provider = "mongodb"
    url      = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum AccountStatus {
    ACTIVE
    INACTIVE
}

enum TeamMemberAccountStatus {
    ACTIVE
    INACTIVE
    DEACTIVATED
}

enum ProjectStatus {
    ACTIVE
    ONHOLD
    ARCHIVED
    COMPLETED
}

enum TaskStatus {
    TODO
    INPROGRESS
    DONE
}

enum StoryStatus {
    TODO
    INPROGRESS
    DONE
    ARCHIVED
}

enum ContributorStatus {
    ACTIVE
    INACTIVE
}

type Tasks {
    id          String
    title       String
    description String?
    due         DateTime
    status      TaskStatus @default(TODO)
}

type SubTasks {
    id          String
    title       String
    description String?
    due         DateTime
    status      TaskStatus
}

model Company {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    name     String
    position String
    adminId  String @unique @db.ObjectId
}

model Admin {
    id                               String        @id @default(auto()) @map("_id") @db.ObjectId
    email                            String        @unique
    preferredFirstName               String?
    firstName                        String
    lastName                         String
    password                         String
    status                           AccountStatus @default(INACTIVE)
    activationToken                  String?
    passwordResetToken               String?
    passwordResetTokenExpirationDate DateTime?
    createdAt                        DateTime      @default(now())
    updatedAt                        DateTime      @updatedAt
    tasks                            Tasks[]
}

model Project {
    id          String        @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    description String
    status      ProjectStatus @default(ACTIVE)
    progress    Int           @default(0)
    adminId     String        @db.ObjectId
    startDate   DateTime
    endDate     DateTime
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
}

model TeamMember {
    id                               String                  @id @default(auto()) @map("_id") @db.ObjectId
    firstName                        String
    lastName                         String
    position                         String
    email                            String                  @unique
    password                         String?
    status                           TeamMemberAccountStatus @default(INACTIVE)
    adminId                          String                  @db.ObjectId
    inviteToken                      String?
    passwordResetToken               String?
    passwordResetTokenExpirationDate DateTime?
    joinDate                         DateTime
    createdAt                        DateTime                @default(now())
    updatedAt                        DateTime                @updatedAt
    tasks                            Tasks[]
}

model Contributor {
    id           String            @id @default(auto()) @map("_id") @db.ObjectId
    teamMemberId String            @db.ObjectId
    projectId    String            @db.ObjectId
    status       ContributorStatus @default(ACTIVE)
    joinedAt     DateTime          @default(now())
    createdAt    DateTime          @default(now())
    updatedAt    DateTime          @updatedAt
}

model Story {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    projectId String   @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    title       String
    description String?
    status      StoryStatus @default(TODO)
    point       Int?
    due         DateTime?
    assigneeId  String?     @db.ObjectId
    subTasks    SubTasks[]
}
